from telebot import types
import telebot
import settings
import db
import logging
from datetime import datetime

bot = telebot.TeleBot(settings.BOT_TOKEN)

@bot.message_handler(commands=['start'])

def send_welcome(message:types.Message):
    bot.send_message(
        chat_id=message.chat.id,
        text = 'Hello, I am finance manager helper. \n–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥'
    )
    db.insert_user(message.from_user.username, message.from_user.id)

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """
    –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    /start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–ºüê±‚Äçüêâ
    /help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥üòú
    /add - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é (—Ñ–æ—Ä–º–∞—Ç: /add —Å—É–º–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è [–¥–∞—Ç–∞])üòé
    /show - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏üëç
    /balance - –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Åüòä
    /delete - —É–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ ID (—Ñ–æ—Ä–º–∞—Ç: /delete ID)üåπ
    /update - –æ–±–Ω–æ–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é (—Ñ–æ—Ä–º–∞—Ç: /update ID —Å—É–º–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–∞—Ç–∞)‚ù§
    /setbudget - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—é–¥–∂–µ—Ç (—Ñ–æ—Ä–º–∞—Ç: /setbudget –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É–º–º–∞)‚úî
    /showbudgets - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –±—é–¥–∂–µ—Ç—ãüëÄ
    /updatebudget - –æ–±–Ω–æ–≤–∏—Ç—å –±—é–¥–∂–µ—Ç (—Ñ–æ—Ä–º–∞—Ç: /updatebudget ID —Å—É–º–º–∞)üò¢
    /info_user - –∏–Ω—Ñ–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µüéÅ
    """
    bot.reply_to(message, help_text)


@bot.message_handler(commands=['info_user'])
def info_user(message:types.Message):
    bot.send_message(
        chat_id=message.chat.id,
        text = message.chat.first_name
    )

@bot.message_handler(commands=['add'])
def help_add(message:types.Message):
    am = bot.send_message(
        chat_id=message.chat.id,
        text = '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏'
    )
    bot.register_next_step_handler(am, choose_category, message.chat.id) 

def choose_category(message:types.Message, chat_id):
    try:
        amount = float(message.text)
        am = bot.send_message(
            chat_id=message.chat.id,
            text='–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏'
        )
        bot.register_next_step_handler(am, category_step, amount, chat_id)
    except Exception as error:
        logging.error(f'–ü–æ–∂–∞–ª—É—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å—É–º–º—ã: {error}')
        am = bot.send_message(
            chat_id=message.chat.id,
            text='–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏'
        )
        bot.register_next_step_handler(am, choose_category, chat_id)

def category_step(message:types.Message, amount, chat_id):
    category = message.text
    bot.send_message(
        chat_id=chat_id,
        text='–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å –≤–∞—à–µ–π –¥–∞—Ç–æ–π'
    )
    add_transaction(message, amount, category)
  
def add_transaction(message:types.Message, amount, category):
    try:
        date = datetime.now().strftime("%Y-%m-%d")
        db.create_transactions(amount, date , category) 
        bot.send_message(message.chat.id, '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞(‚òûÔæü„ÉÆÔæü)‚òû')
    except Exception as error:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {error}')
        bot.send_message(message.chat.id, '–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã')

@bot.message_handler(commands=['set_budget'])
    
def choose_category(message:types.Message):
    try:
        am = bot.send_message(
            chat_id=message.chat.id,
            text='–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±—é–¥–∂–µ—Ç–∞ '
        )
        bot.register_next_step_handler(message, category_step, am)
    except Exception as error:
        logging.error(f'–ü–æ–∂–∞–ª—É—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å—É–º–º—ã: {error}')
        am = bot.send_message(
            chat_id=message.chat.id,
            text='–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±—é–¥–∂–µ—Ç–∞'
        )
        bot.register_next_step_handler(message, choose_category,am )

def category_step(message:types.Message, chat_id):
    category = message.text
    bot.send_message(
        chat_id=chat_id,
        text='–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è –±—é–¥–∂–µ—Ç–∞'
    )
    bot.register_next_step_handler(message, choose_amount)
def choose_amount(message:types.Message, chat_id):
    am=bot.send_message(
        chat_id=chat_id,
        text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –±—é–¥–∂–µ—Ç–∞'
    )
    bot.register_next_step_handler(message, choose_step, )


@bot.message_handler(func=lambda message: True)
def Echo(message):
    bot.reply_to(message, '–¢–∞–∫–æ–≥–æ –Ω–µ—Ç—ÉüòÅ')

def hello():













logging.basicConfig(level=logging.INFO)
if __name__ == '__main__':
    bot.polling()